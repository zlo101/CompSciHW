#include <iostream>
using namespace std;

int KnapSack(int W, int wt[], int val[], int N) {
    int dp[W + 1];
    memset(dp, 0, sizeof(dp));

    for (int i = 1; i < N + 1; i++) {
        for (int w = W; w >= 0; w--) {
            if (wt[i - 1] <= w)
                dp[w] = max(dp[w], dp[w - wt[i - 1]] + val[i - 1]);
        }
    }
    
    return dp[W];
}

int main() {
    int N, W;
    cin >> N >> W;
    int wt[N], val[N];

    for (int i = 0; i < N; i++)
        cin >> wt[i] >> val[i];

    cout << KnapSack(W, wt, val, N);
    return 0;
}
